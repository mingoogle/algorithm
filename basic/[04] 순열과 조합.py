# 순열이란?
# 서로 다른 n개에서 r개를 택하여 일렬로 나열하는 것을 순열이라고 합니다.
# 서로 다른 n개에서 r개를 나열하는 경우의 수를 순열이라고하는데 순열은 영어로 Permutation이다.
# 순열의 앞글자를 따서 nPr이라고도 쓴다. ( n개에서 r개를 택한 순열의 수 )
# 공식은 n! / (n-r)!
# ex) 해야할일 4개 중 2개를 고르는데 할일의 순서를 정하는 방법의 수는 몇개인가?
#    해야할일 [1,2,3,4]가 있다면 순열에서는 [1,2] 과 [2,1]은 다르다. => 1번부터하고 2번을 하는거랑 2번부터하고 1번부터하는건 다르니까.
# 정답은 12개

# 조합이란?
# 서로 다른 n개에서 순서에 상관없이 서로 다른 r개를 선택하는 것 ==> 즉 순서가 없다
# ex) 해야할일 4개 중 2개를 고르는 방법의 수는 몇개인가?
#    해야할일 [1,2,3,4]가 있다면 순열에서는 [1,2] 과 [2,1]은 다르다. => 1번부터하고 2번을 하는거랑 2번부터하고 1번부터하는건 다르니까.
#    하지만 조합에서는 [1,2] 랑 [2,1]는 같다. 순서를 따지는게아니라 조합의 수를 보기때문에 따라서 m!만큼 나눠줘야된다.
#   조합은 영어로 Combination => 조합의 앞글자 C를 따서 nCr이라고도 쓴다.
# 공식은 n! / (n-r)! / m!

# Q.1)  데이터 2개중 2개의 순열의 수 => 순서를 포함하니 중복된 데이터같은것도 포함해 (1,2) != (2,1)
import itertools

data = [1,2]
for x in itertools.permutations(data,2):
    # print(x) ## permutations(순열)이 리턴할때 리스트로 리턴하지않아 그래서 리스트로 출력하고싶다면 아래처럼해라.
    print(list(x))


# Q.2) 조합 데이터 3개중 2개의 조합이수 조합이니 중복되면안되 => (1,2) == (2,1)
data = [1,2,3]
for x in itertools.combinations(data,2):
    # print('xx?s')
   #  print(x)
    print(list(x), end=' ')

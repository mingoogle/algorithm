# 구간 합 문제란?
# 나열된 N개의 수가 있을 때 끝정 구간의 모든 수의 합을 구하는 문제 ex) 2~5까지의 합한 값은?
# 일일히 합을 구하게 되면 O(NM)의 시간이 걸린다.
# ==> 미리 합을 구해놓고 가져다 쓴다면...? 시간이 덜 걸리겠지 == prefix Sum을 구하자

#   1. N개의 수에 대하여 접두사 합 (Prefix Sum)을 계산하여 배열 P에 저장한다.
#   매 M개의 쿼리 정보를 [L,R]을 확인할 때 P[R] - P[L-1]이다.
# ex) [10,20,30,40,50]이 있다면 Prefix 값은?  => P[0] = 0 , P[1] =10 , P[2] = 30 , P[3] = 60 , P[4] = 100 , P[5] = 150
# ==> 이렇게 미리 값을 가져다가쓰면 계산시간 O(1)의 시간밖에 안걸려 결과적으로 값을 합하게된다면 O(N+M)의 시간이 걸리지

n = 5
data = [10,20,30,40,50]

sum_value = 0
prefix_sum = [0]
for i in data:
    sum_value += i
    prefix_sum.append(sum_value)

print(prefix_sum)

# 3~4의 합한 결과값을 구하세요.
# left = 2 => [1,2]의 합
left = 3 # [1,2,3]의 합
right = 4 # [1,2,3,4]의 합

# 3~4의 합을 구하려면 [1,2,3,4]의 합 중에 [1,2]가 없어지면됨
# [1,2]의 값은 left-1에 위치하잖아!
print(prefix_sum[right] - prefix_sum[left-1])

